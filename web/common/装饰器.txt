什么是装饰器

现在我们知道装饰器实际上就是一个函数，我们也知道他们接受函数对象，但他们是怎么处理那些函数？
当你包装一个函数的时候，你最终会调用它，最棒的是我们能够在包装的环境下在合适的时机调用它，
我们在执行函数之前，可以运行那些预备代码，如 post-morren分析，也可以在执行代码之后做个清理工作，
所以当你看见一个装饰器函数的时候，很可能在里面找到这样一些代码，
它定义了某个函数并在定义内的某处嵌入了对目标函数的调用或者至少一些引用。
从本质上看，这些特征引入了java开发者称之为AOP的概念，可以考虑在装饰器中置入通用功能的代码来降低程序复杂度。

可以用装饰器来：

引入日志
增加计时逻辑来检测性能
给函数加入事务能力。